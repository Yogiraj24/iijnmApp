/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.hp.supplier.dao;

import java.util.Date;
import com.hp.supplier.dto.*;
import com.hp.supplier.exceptions.*;

public interface BusinessInfoDao
{
	/** 
	 * Inserts a new row in the business_info table.
	 */
	public BusinessInfoPk insert(BusinessInfo dto) throws BusinessInfoDaoException;

	/** 
	 * Updates a single row in the business_info table.
	 */
	public void update(BusinessInfoPk pk, BusinessInfo dto) throws BusinessInfoDaoException;

	/** 
	 * Deletes a single row in the business_info table.
	 */
	public void delete(BusinessInfoPk pk) throws BusinessInfoDaoException;

	/** 
	 * Returns the rows from the business_info table that matches the specified primary-key value.
	 */
	public BusinessInfo findByPrimaryKey(BusinessInfoPk pk) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'id = :id'.
	 */
	public BusinessInfo findByPrimaryKey(int id) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria ''.
	 */
	public BusinessInfo[] findAll() throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'supplier_id = :supplierId'.
	 */
	public BusinessInfo[] findBySubmissionForm(int supplierId) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'id = :id'.
	 */
	public BusinessInfo[] findWhereIdEquals(int id) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'supplier_id = :supplierId'.
	 */
	public BusinessInfo[] findWhereSupplierIdEquals(int supplierId) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'uk = :uk'.
	 */
	public BusinessInfo[] findWhereUkEquals(String uk) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'eec = :eec'.
	 */
	public BusinessInfo[] findWhereEecEquals(String eec) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'non_eec = :nonEec'.
	 */
	public BusinessInfo[] findWhereNonEecEquals(String nonEec) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'disabled_per = :disabledPer'.
	 */
	public BusinessInfo[] findWhereDisabledPerEquals(String disabledPer) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'women_per = :womenPer'.
	 */
	public BusinessInfo[] findWhereWomenPerEquals(String womenPer) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'company_name = :companyName'.
	 */
	public BusinessInfo[] findWhereCompanyNameEquals(String companyName) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'address_line1 = :addressLine1'.
	 */
	public BusinessInfo[] findWhereAddressLine1Equals(String addressLine1) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'adderss_line2 = :adderssLine2'.
	 */
	public BusinessInfo[] findWhereAdderssLine2Equals(String adderssLine2) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'city = :city'.
	 */
	public BusinessInfo[] findWhereCityEquals(String city) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'country = :country'.
	 */
	public BusinessInfo[] findWhereCountryEquals(String country) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'postal_code = :postalCode'.
	 */
	public BusinessInfo[] findWherePostalCodeEquals(String postalCode) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'web_site = :webSite'.
	 */
	public BusinessInfo[] findWhereWebSiteEquals(String webSite) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'contact_name = :contactName'.
	 */
	public BusinessInfo[] findWhereContactNameEquals(String contactName) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'title = :title'.
	 */
	public BusinessInfo[] findWhereTitleEquals(String title) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'phone = :phone'.
	 */
	public BusinessInfo[] findWherePhoneEquals(String phone) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'email = :email'.
	 */
	public BusinessInfo[] findWhereEmailEquals(String email) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'duns_number = :dunsNumber'.
	 */
	public BusinessInfo[] findWhereDunsNumberEquals(int dunsNumber) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'company_reg_number = :companyRegNumber'.
	 */
	public BusinessInfo[] findWhereCompanyRegNumberEquals(String companyRegNumber) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_academic = :isAcademic'.
	 */
	public BusinessInfo[] findWhereIsAcademicEquals(String isAcademic) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_charity = :isCharity'.
	 */
	public BusinessInfo[] findWhereIsCharityEquals(String isCharity) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'org_established = :orgEstablished'.
	 */
	public BusinessInfo[] findWhereOrgEstablishedEquals(String orgEstablished) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'annual_gross = :annualGross'.
	 */
	public BusinessInfo[] findWhereAnnualGrossEquals(String annualGross) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'net_worth = :netWorth'.
	 */
	public BusinessInfo[] findWhereNetWorthEquals(String netWorth) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_single_emp = :isSingleEmp'.
	 */
	public BusinessInfo[] findWhereIsSingleEmpEquals(String isSingleEmp) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_micro_emp = :isMicroEmp'.
	 */
	public BusinessInfo[] findWhereIsMicroEmpEquals(String isMicroEmp) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_small_emp = :isSmallEmp'.
	 */
	public BusinessInfo[] findWhereIsSmallEmpEquals(String isSmallEmp) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_medium_emp = :isMediumEmp'.
	 */
	public BusinessInfo[] findWhereIsMediumEmpEquals(String isMediumEmp) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_large_emp = :isLargeEmp'.
	 */
	public BusinessInfo[] findWhereIsLargeEmpEquals(String isLargeEmp) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_profitable = :isProfitable'.
	 */
	public BusinessInfo[] findWhereIsProfitableEquals(String isProfitable) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'trade_electronically = :tradeElectronically'.
	 */
	public BusinessInfo[] findWhereTradeElectronicallyEquals(String tradeElectronically) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'accept_electronic = :acceptElectronic'.
	 */
	public BusinessInfo[] findWhereAcceptElectronicEquals(String acceptElectronic) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'broad_band = :broadBand'.
	 */
	public BusinessInfo[] findWhereBroadBandEquals(String broadBand) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_public_limited = :isPublicLimited'.
	 */
	public BusinessInfo[] findWhereIsPublicLimitedEquals(String isPublicLimited) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_limited = :isLimited'.
	 */
	public BusinessInfo[] findWhereIsLimitedEquals(String isLimited) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'subsidiary = :subsidiary'.
	 */
	public BusinessInfo[] findWhereSubsidiaryEquals(String subsidiary) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_franchise = :isFranchise'.
	 */
	public BusinessInfo[] findWhereIsFranchiseEquals(String isFranchise) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_general_partnership = :isGeneralPartnership'.
	 */
	public BusinessInfo[] findWhereIsGeneralPartnershipEquals(String isGeneralPartnership) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_limited_partnership = :isLimitedPartnership'.
	 */
	public BusinessInfo[] findWhereIsLimitedPartnershipEquals(String isLimitedPartnership) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_propritory = :isPropritory'.
	 */
	public BusinessInfo[] findWhereIsPropritoryEquals(String isPropritory) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_reg_charity = :isRegCharity'.
	 */
	public BusinessInfo[] findWhereIsRegCharityEquals(String isRegCharity) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'is_academic_institute = :isAcademicInstitute'.
	 */
	public BusinessInfo[] findWhereIsAcademicInstituteEquals(String isAcademicInstitute) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'date_created = :dateCreated'.
	 */
	public BusinessInfo[] findWhereDateCreatedEquals(Date dateCreated) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the criteria 'date_modified = :dateModified'.
	 */
	public BusinessInfo[] findWhereDateModifiedEquals(Date dateModified) throws BusinessInfoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the business_info table that match the specified arbitrary SQL statement
	 */
	public BusinessInfo[] findByDynamicSelect(String sql, Object[] sqlParams) throws BusinessInfoDaoException;

	/** 
	 * Returns all rows from the business_info table that match the specified arbitrary SQL statement
	 */
	public BusinessInfo[] findByDynamicWhere(String sql, Object[] sqlParams) throws BusinessInfoDaoException;

}
