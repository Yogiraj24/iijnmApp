/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.hp.supplier.dao;

import java.util.Date;
import com.hp.supplier.dto.*;
import com.hp.supplier.exceptions.*;

public interface ContactsreferencesDao
{
	/** 
	 * Inserts a new row in the contactsreferences table.
	 */
	public ContactsreferencesPk insert(Contactsreferences dto) throws ContactsreferencesDaoException;

	/** 
	 * Updates a single row in the contactsreferences table.
	 */
	public void update(ContactsreferencesPk pk, Contactsreferences dto) throws ContactsreferencesDaoException;

	/** 
	 * Deletes a single row in the contactsreferences table.
	 */
	public void delete(ContactsreferencesPk pk) throws ContactsreferencesDaoException;

	/** 
	 * Returns the rows from the contactsreferences table that matches the specified primary-key value.
	 */
	public Contactsreferences findByPrimaryKey(ContactsreferencesPk pk) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'id = :id AND supplier_id = :supplierId'.
	 */
	public Contactsreferences findByPrimaryKey(int id, int supplierId) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria ''.
	 */
	public Contactsreferences[] findAll() throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'supplier_id = :supplierId'.
	 */
	public Contactsreferences[] findBySubmissionForm(int supplierId) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'id = :id'.
	 */
	public Contactsreferences[] findWhereIdEquals(int id) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'supplier_id = :supplierId'.
	 */
	public Contactsreferences[] findWhereSupplierIdEquals(int supplierId) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'is_HP_trader = :isHpTrader'.
	 */
	public Contactsreferences[] findWhereIsHpTraderEquals(String isHpTrader) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'contract_title = :contractTitle'.
	 */
	public Contactsreferences[] findWhereContractTitleEquals(String contractTitle) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'contract_ref = :contractRef'.
	 */
	public Contactsreferences[] findWhereContractRefEquals(String contractRef) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'expiry_date = :expiryDate'.
	 */
	public Contactsreferences[] findWhereExpiryDateEquals(String expiryDate) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'hp_contract_mgr = :hpContractMgr'.
	 */
	public Contactsreferences[] findWhereHpContractMgrEquals(String hpContractMgr) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'div_name_1 = :divName1'.
	 */
	public Contactsreferences[] findWhereDivName1Equals(String divName1) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'contact_name_1 = :contactName1'.
	 */
	public Contactsreferences[] findWhereContactName1Equals(String contactName1) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'site_location_1 = :siteLocation1'.
	 */
	public Contactsreferences[] findWhereSiteLocation1Equals(String siteLocation1) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'last_meeting_date_1 = :lastMeetingDate1'.
	 */
	public Contactsreferences[] findWhereLastMeetingDate1Equals(Date lastMeetingDate1) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'approx_service_period_1 = :approxServicePeriod1'.
	 */
	public Contactsreferences[] findWhereApproxServicePeriod1Equals(String approxServicePeriod1) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'div_name_2 = :divName2'.
	 */
	public Contactsreferences[] findWhereDivName2Equals(String divName2) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'hp_contact_name_2 = :hpContactName2'.
	 */
	public Contactsreferences[] findWhereHpContactName2Equals(String hpContactName2) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'site_location_2 = :siteLocation2'.
	 */
	public Contactsreferences[] findWhereSiteLocation2Equals(String siteLocation2) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'last_meeting_date_2 = :lastMeetingDate2'.
	 */
	public Contactsreferences[] findWhereLastMeetingDate2Equals(Date lastMeetingDate2) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'approx_service_period_2 = :approxServicePeriod2'.
	 */
	public Contactsreferences[] findWhereApproxServicePeriod2Equals(String approxServicePeriod2) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'div_name_3 = :divName3'.
	 */
	public Contactsreferences[] findWhereDivName3Equals(String divName3) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'hp_contact_name_3 = :hpContactName3'.
	 */
	public Contactsreferences[] findWhereHpContactName3Equals(String hpContactName3) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'site_location_3 = :siteLocation3'.
	 */
	public Contactsreferences[] findWhereSiteLocation3Equals(String siteLocation3) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'last_meeting_date_3 = :lastMeetingDate3'.
	 */
	public Contactsreferences[] findWhereLastMeetingDate3Equals(Date lastMeetingDate3) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'approx_service_period_3 = :approxServicePeriod3'.
	 */
	public Contactsreferences[] findWhereApproxServicePeriod3Equals(String approxServicePeriod3) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'organization_1 = :organization1'.
	 */
	public Contactsreferences[] findWhereOrganization1Equals(String organization1) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'hp_contact_name_1 = :hpContactName1'.
	 */
	public Contactsreferences[] findWhereHpContactName1Equals(String hpContactName1) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'contact_title_1 = :contactTitle1'.
	 */
	public Contactsreferences[] findWhereContactTitle1Equals(String contactTitle1) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'email_address_1 = :emailAddress1'.
	 */
	public Contactsreferences[] findWhereEmailAddress1Equals(String emailAddress1) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'organization_2 = :organization2'.
	 */
	public Contactsreferences[] findWhereOrganization2Equals(String organization2) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'contact_name_2 = :contactName2'.
	 */
	public Contactsreferences[] findWhereContactName2Equals(String contactName2) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'contact_title_2 = :contactTitle2'.
	 */
	public Contactsreferences[] findWhereContactTitle2Equals(String contactTitle2) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'email_address_2 = :emailAddress2'.
	 */
	public Contactsreferences[] findWhereEmailAddress2Equals(String emailAddress2) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'organization_3 = :organization3'.
	 */
	public Contactsreferences[] findWhereOrganization3Equals(String organization3) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'contact_name_3 = :contactName3'.
	 */
	public Contactsreferences[] findWhereContactName3Equals(String contactName3) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'contact_title_3 = :contactTitle3'.
	 */
	public Contactsreferences[] findWhereContactTitle3Equals(String contactTitle3) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'email_address_3 = :emailAddress3'.
	 */
	public Contactsreferences[] findWhereEmailAddress3Equals(String emailAddress3) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'date_created = :dateCreated'.
	 */
	public Contactsreferences[] findWhereDateCreatedEquals(Date dateCreated) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the criteria 'date_modified = :dateModified'.
	 */
	public Contactsreferences[] findWhereDateModifiedEquals(Date dateModified) throws ContactsreferencesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the contactsreferences table that match the specified arbitrary SQL statement
	 */
	public Contactsreferences[] findByDynamicSelect(String sql, Object[] sqlParams) throws ContactsreferencesDaoException;

	/** 
	 * Returns all rows from the contactsreferences table that match the specified arbitrary SQL statement
	 */
	public Contactsreferences[] findByDynamicWhere(String sql, Object[] sqlParams) throws ContactsreferencesDaoException;

}
