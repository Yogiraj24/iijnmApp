/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.hp.supplier.dao;

import com.hp.supplier.dto.*;
import com.hp.supplier.exceptions.*;

public interface SupplierDetailsDao
{
	/** 
	 * Inserts a new row in the supplier_details table.
	 */
	public SupplierDetailsPk insert(SupplierDetails dto) throws SupplierDetailsDaoException;

	/** 
	 * Updates a single row in the supplier_details table.
	 */
	public void update(SupplierDetailsPk pk, SupplierDetails dto) throws SupplierDetailsDaoException;

	/** 
	 * Deletes a single row in the supplier_details table.
	 */
	public void delete(SupplierDetailsPk pk) throws SupplierDetailsDaoException;

	/** 
	 * Returns the rows from the supplier_details table that matches the specified primary-key value.
	 */
	public SupplierDetails findByPrimaryKey(SupplierDetailsPk pk) throws SupplierDetailsDaoException;

	/** 
	 * Returns all rows from the supplier_details table that match the criteria 'id = :id'.
	 */
	public SupplierDetails findByPrimaryKey(int id) throws SupplierDetailsDaoException;

	/** 
	 * Returns all rows from the supplier_details table that match the criteria ''.
	 */
	public SupplierDetails[] findAll() throws SupplierDetailsDaoException;

	/** 
	 * Returns all rows from the supplier_details table that match the criteria 'id = :id'.
	 */
	public SupplierDetails[] findWhereIdEquals(int id) throws SupplierDetailsDaoException;

	/** 
	 * Returns all rows from the supplier_details table that match the criteria 'name = :name'.
	 */
	public SupplierDetails[] findWhereNameEquals(String name) throws SupplierDetailsDaoException;

	/** 
	 * Returns all rows from the supplier_details table that match the criteria 'contactno = :contactno'.
	 */
	public SupplierDetails[] findWhereContactnoEquals(String contactno) throws SupplierDetailsDaoException;

	/** 
	 * Returns all rows from the supplier_details table that match the criteria 'address = :address'.
	 */
	public SupplierDetails[] findWhereAddressEquals(String address) throws SupplierDetailsDaoException;

	/** 
	 * Returns all rows from the supplier_details table that match the criteria 'remarks = :remarks'.
	 */
	public SupplierDetails[] findWhereRemarksEquals(String remarks) throws SupplierDetailsDaoException;

	/** 
	 * Returns all rows from the supplier_details table that match the criteria 'contact_person = :contactPerson'.
	 */
	public SupplierDetails[] findWhereContactPersonEquals(String contactPerson) throws SupplierDetailsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the supplier_details table that match the specified arbitrary SQL statement
	 */
	public SupplierDetails[] findByDynamicSelect(String sql, Object[] sqlParams) throws SupplierDetailsDaoException;

	/** 
	 * Returns all rows from the supplier_details table that match the specified arbitrary SQL statement
	 */
	public SupplierDetails[] findByDynamicWhere(String sql, Object[] sqlParams) throws SupplierDetailsDaoException;

}
