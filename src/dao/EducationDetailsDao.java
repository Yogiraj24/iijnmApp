/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.edu.iijnm.dao;

import java.util.Date;
import com.edu.iijnm.dto.*;
import com.edu.iijnm.exceptions.*;

public interface EducationDetailsDao
{
	/** 
	 * Inserts a new row in the education_details table.
	 */
	public EducationDetailsPk insert(EducationDetails dto) throws EducationDetailsDaoException;

	/** 
	 * Updates a single row in the education_details table.
	 */
	public void update(EducationDetailsPk pk, EducationDetails dto) throws EducationDetailsDaoException;

	/** 
	 * Deletes a single row in the education_details table.
	 */
	public void delete(EducationDetailsPk pk) throws EducationDetailsDaoException;

	/** 
	 * Returns the rows from the education_details table that matches the specified primary-key value.
	 */
	public EducationDetails findByPrimaryKey(EducationDetailsPk pk) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'id = :id'.
	 */
	public EducationDetails findByPrimaryKey(int id) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria ''.
	 */
	public EducationDetails[] findAll() throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'student_id = :studentId'.
	 */
	public EducationDetails[] findByPersonalDetails(int studentId) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'id = :id'.
	 */
	public EducationDetails[] findWhereIdEquals(int id) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'student_id = :studentId'.
	 */
	public EducationDetails[] findWhereStudentIdEquals(int studentId) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'school_name = :schoolName'.
	 */
	public EducationDetails[] findWhereSchoolNameEquals(String schoolName) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'leaving_certiticate = :leavingCertiticate'.
	 */
	public EducationDetails[] findWhereLeavingCertiticateEquals(String leavingCertiticate) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'school_passing = :schoolPassing'.
	 */
	public EducationDetails[] findWhereSchoolPassingEquals(String schoolPassing) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'schoole_grade = :schooleGrade'.
	 */
	public EducationDetails[] findWhereSchooleGradeEquals(String schooleGrade) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'college_name = :collegeName'.
	 */
	public EducationDetails[] findWhereCollegeNameEquals(String collegeName) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'college_degree = :collegeDegree'.
	 */
	public EducationDetails[] findWhereCollegeDegreeEquals(String collegeDegree) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'college_year = :collegeYear'.
	 */
	public EducationDetails[] findWhereCollegeYearEquals(String collegeYear) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'degree_subjects = :degreeSubjects'.
	 */
	public EducationDetails[] findWhereDegreeSubjectsEquals(String degreeSubjects) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'college_grade = :collegeGrade'.
	 */
	public EducationDetails[] findWhereCollegeGradeEquals(String collegeGrade) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'master_college_name = :masterCollegeName'.
	 */
	public EducationDetails[] findWhereMasterCollegeNameEquals(String masterCollegeName) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'master_degree = :masterDegree'.
	 */
	public EducationDetails[] findWhereMasterDegreeEquals(String masterDegree) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'master_passing = :masterPassing'.
	 */
	public EducationDetails[] findWhereMasterPassingEquals(String masterPassing) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'master_subjects = :masterSubjects'.
	 */
	public EducationDetails[] findWhereMasterSubjectsEquals(String masterSubjects) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'master_grade = :masterGrade'.
	 */
	public EducationDetails[] findWhereMasterGradeEquals(String masterGrade) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'other_qualification = :otherQualification'.
	 */
	public EducationDetails[] findWhereOtherQualificationEquals(String otherQualification) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'computer_literate = :computerLiterate'.
	 */
	public EducationDetails[] findWhereComputerLiterateEquals(String computerLiterate) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'computer_applications = :computerApplications'.
	 */
	public EducationDetails[] findWhereComputerApplicationsEquals(String computerApplications) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'language_1 = :language1'.
	 */
	public EducationDetails[] findWhereLanguage1Equals(String language1) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'language_2 = :language2'.
	 */
	public EducationDetails[] findWhereLanguage2Equals(String language2) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'language_3 = :language3'.
	 */
	public EducationDetails[] findWhereLanguage3Equals(String language3) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'created_date = :createdDate'.
	 */
	public EducationDetails[] findWhereCreatedDateEquals(Date createdDate) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the criteria 'modified_date = :modifiedDate'.
	 */
	public EducationDetails[] findWhereModifiedDateEquals(Date modifiedDate) throws EducationDetailsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the education_details table that match the specified arbitrary SQL statement
	 */
	public EducationDetails[] findByDynamicSelect(String sql, Object[] sqlParams) throws EducationDetailsDaoException;

	/** 
	 * Returns all rows from the education_details table that match the specified arbitrary SQL statement
	 */
	public EducationDetails[] findByDynamicWhere(String sql, Object[] sqlParams) throws EducationDetailsDaoException;

}
